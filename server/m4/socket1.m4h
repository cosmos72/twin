/* Copyright (C) 2000 by Massimiliano Ghilardi
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 */


dnl This file is `m4/socket1.m4' : m4 macros to autogenerate socket1_m4.h
dnl Tell the user about this.
/* This file was automatically generated from `m4/socket1.m4', do not edit! */

/* clang-format off */

define(`TRIM', `translit(`$1', ` ')')

define(`NSHIFT', `ifelse($1, 0, `shift($@)', `NSHIFT(decr($1), shift(shift($@)))')')

define(`tv', v)
define(`t_', _)
define(`tx', x)
define(`tV', V)
define(`tW', V)
define(`tX', X)
define(`tY', V)
define(`tO', _)

define(`T_', tany)
define(`TO', tany)
define(`Tx', obj)

define(`DECL0', `ifelse($2, v, `', `a[0]`'ifelse(T$2, obj, `_obj', `_any') = ifelse($2, x, (Tobj), ($1))')')

define(`ARG', `ifelse($1, 1, `', ``, '')`'ifelse($3, V, `(const $2 *)a[$1]_vec', $3, X, `(const T$2 *)a[$1]_vec', $3, x, `(T$2)a[$1]_obj', `($2)a[$1]_any')')

define(`PARSE', `ifelse($#, 2, `', `ARG($1,$2,t$3)`'PARSE(incr($1), NSHIFT(4, $@))')')

define(`CALL', `ifelse($4, 0, sock`'$2`'$3($6), $4, 1, S`'translit($3, `A-Z', `a-z')::$2($6), ((T$5)a[1]_obj)->$2(shift($6)));')

define(`PROTO', `case order_`'TRIM($3)`'TRIM($4):
    if (a.size() >= eval(($# - 5) / 3))
        DECL0($1, $2)`'CALL($1,TRIM($3),TRIM($4),$5,$6,PARSE(1, NSHIFT(5, $@)))
    break;
')

define(`PROTOSyncSocket', `PROTO($@)')
define(`PROTOFindFunction', `PROTO($@)')

include(`m4/Tw_sockproto.m4')
